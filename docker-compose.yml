version: "3.8"
services:
  rabbitmq:
    container_name: "${PROJECT_NAME}-rabbitmq"
    image: "rabbitmq:3.8.9-management-alpine"
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    networks:
      - default
  server:
    container_name: "${PROJECT_NAME}-server"
    image: "rosetta/server"
    restart: on-failure
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      SERVER_PORT: ${SERVER_PORT}
      SERVER_RABBITMQ_URL: ${SERVER_RABBITMQ_URL}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - default
  orchestrator:
    container_name: "${PROJECT_NAME}-orchestrator"
    image: "rosetta/orchestrator"
    restart: on-failure
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - default
  pyxel:
    container_name: "${PROJECT_NAME}-pyxel"
    image: "rosetta/pyxel"
    restart: on-failure
    build:
      context: ./pyxel
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - server
    environment:
      PYXEL_RABBITMQ_HOST: ${PYXEL_RABBITMQ_HOST}
      PYXEL_RABBITMQ_PORT: ${PYXEL_RABBITMQ_PORT}
      PYXEL_RABBITMQ_USER: ${PYXEL_RABBITMQ_USER}
      PYXEL_RABBITMQ_PASS: ${PYXEL_RABBITMQ_PASS}
  webapp:
    container_name: "${PROJECT_NAME}-web"
    image: "rosetta/web"
    restart: unless-stopped
    build:
      context: ./webapp
      dockerfile: Dockerfile
    depends_on:
      - server
    ports:
      - "${WEBAPP_PORT}:80"
    networks:
      - default
networks:
  default:
    driver: bridge
